{"ast":null,"code":"import _slicedToArray from \"/Users/rafelolmos/Documents/HookTheBook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rafelolmos/Documents/HookTheBook/src/components/SearchBook/SearchBook.js\";\nimport React, { useState, useEffect } from 'react';\nconst bookListName = [\"Hola\", \"hola HOLA\", \"adeu\", \"asdfsdf\", \"ASDadasdf\"];\n\nconst SearchBook = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchBookItem = _useState2[0],\n        setSearchBookiItem = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchResult = _useState4[0],\n        setSearchResult = _useState4[1];\n\n  const handleSearch = event => {\n    setSearchBookiItem(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = bookListName.filter(bookItem => bookItem.toLowerCase().includes(searchBookItem));\n    setSearchResult(results);\n  }, [searchBookItem]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search a book\",\n    value: searchBookItem,\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), searchBookItem === undefined ? React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, searchResult.map(item => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, item))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default SearchBook;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/HookTheBook/src/components/SearchBook/SearchBook.js"],"names":["React","useState","useEffect","bookListName","SearchBook","searchBookItem","setSearchBookiItem","searchResult","setSearchResult","handleSearch","event","target","value","results","filter","bookItem","toLowerCase","includes","undefined","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,MAAMC,YAAY,GAAG,CACjB,MADiB,EAEjB,WAFiB,EAGjB,MAHiB,EAIjB,SAJiB,EAKjB,WALiB,CAArB;;AAQA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBAEuBH,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,QAEdI,cAFc;AAAA,QAEEC,kBAFF;;AAAA,qBAGmBL,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,QAGdM,YAHc;AAAA,QAGAC,eAHA;;AAMrB,QAAMC,YAAY,GAAIC,KAAD,IAAU;AAACJ,IAAAA,kBAAkB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAAuC,GAAvE;;AAGAV,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMW,OAAO,GAAGV,YAAY,CAACW,MAAb,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,GAAuBC,QAAvB,CAAgCZ,cAAhC,CAAhC,CAAhB;AACAG,IAAAA,eAAe,CAACK,OAAD,CAAf;AACH,GAHQ,EAGN,CAACR,cAAD,CAHM,CAAT;AAMA,SACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,eAA/B;AAA+C,IAAA,KAAK,EAAEA,cAAtD;AAAsE,IAAA,QAAQ,EAAEI,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,EAICJ,cAAc,KAAKa,SAAnB,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,YAAY,CAACY,GAAb,CAAiBC,IAAI,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADC,CADL,CADH,GAIU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARX,CADJ;AAaH,CA5BD;;AA8BA,eAAehB,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst bookListName = [\n    \"Hola\",\n    \"hola HOLA\",\n    \"adeu\",\n    \"asdfsdf\",\n    \"ASDadasdf\"\n];\n\nconst SearchBook = () => {\n\n    const [searchBookItem, setSearchBookiItem]= useState('')\n    const [searchResult, setSearchResult] = useState([])\n\n    \n    const handleSearch = (event) =>{setSearchBookiItem(event.target.value)};\n    \n\n    useEffect (() => {\n        const results = bookListName.filter(bookItem => bookItem.toLowerCase().includes(searchBookItem));\n        setSearchResult(results);\n    }, [searchBookItem]);\n \n\n    return (\n        <>\n        <div>\n            <input type=\"text\" placeholder=\"search a book\" value={searchBookItem} onChange={handleSearch}/>\n        </div>\n        {searchBookItem === undefined ?  \n            <ul>\n                {searchResult.map(item => (\n                <li>{item}</li>))}\n            </ul> :<div></div>\n    }\n        </>\n    )\n}\n \nexport default SearchBook;\n"]},"metadata":{},"sourceType":"module"}