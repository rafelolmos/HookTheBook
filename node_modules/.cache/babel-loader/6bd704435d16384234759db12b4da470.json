{"ast":null,"code":"import _slicedToArray from \"/Users/rafelolmos/Documents/HookTheBook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rafelolmos/Documents/HookTheBook/src/components/SearchBook/SearchBook.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getAllRealTime } from '../../services/database';\n\nconst SearchBook = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchBookItem = _useState2[0],\n        setSearchBookiItem = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchResult = _useState4[0],\n        setSearchResult = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bookList = _useState6[0],\n        setBookList = _useState6[1];\n\n  const handleSearch = event => {\n    setSearchBookiItem(event.target.value);\n  };\n\n  useEffect(() => {\n    getAllRealTime({\n      collection: 'books',\n      filters: {\n        field: 'title',\n        condition: 'array-contains',\n        value: searchBookItem\n      },\n      order: 'timestamp',\n      callback: collectionData => {\n        const results = [];\n        collectionData.forEach(document => {\n          const data = document.data();\n          const addedBookDate = new Date(data.timestamp);\n          data.date = addedBookDate.toLocaleDateString();\n          data.time = addedBookDate.toLocaleTimeString();\n          results.push(data);\n        });\n        setBookList(results);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    const results = bookList.filter(bookItem => bookItem.toLowerCase().includes(searchBookItem));\n    setSearchResult(results);\n  }, [searchBookItem]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search a book\",\n    value: searchBookItem,\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), searchBookItem !== undefined ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, searchResult.map(item => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item))));\n};\n\nexport default SearchBook;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/HookTheBook/src/components/SearchBook/SearchBook.js"],"names":["React","useState","useEffect","getAllRealTime","SearchBook","searchBookItem","setSearchBookiItem","searchResult","setSearchResult","bookList","setBookList","handleSearch","event","target","value","collection","filters","field","condition","order","callback","collectionData","results","forEach","document","data","addedBookDate","Date","timestamp","date","toLocaleDateString","time","toLocaleTimeString","push","filter","bookItem","toLowerCase","includes","undefined","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAASC,cAAT,QAA+B,yBAA/B;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBAEuBH,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,QAEdI,cAFc;AAAA,QAEEC,kBAFF;;AAAA,qBAGmBL,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,QAGdM,YAHc;AAAA,QAGAC,eAHA;;AAAA,qBAIWP,QAAQ,CAAC,EAAD,CAJnB;AAAA;AAAA,QAIdQ,QAJc;AAAA,QAIJC,WAJI;;AAOrB,QAAMC,YAAY,GAAIC,KAAD,IAAU;AAACN,IAAAA,kBAAkB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAAuC,GAAvE;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAEZC,IAAAA,cAAc,CAAC;AACXY,MAAAA,UAAU,EAAE,OADD;AAEXC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,SAAS,EAAE,gBAA7B;AAA+CJ,QAAAA,KAAK,EAAET;AAAtD,OAFE;AAGXc,MAAAA,KAAK,EAAE,WAHI;AAIXC,MAAAA,QAAQ,EAAGC,cAAD,IAAoB;AAC9B,cAAMC,OAAO,GAAG,EAAhB;AACAD,QAAAA,cAAc,CAACE,OAAf,CAAwBC,QAAD,IAAc;AACjC,gBAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACA,gBAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,SAAd,CAAtB;AACAH,UAAAA,IAAI,CAACI,IAAL,GAAYH,aAAa,CAACI,kBAAd,EAAZ;AACAL,UAAAA,IAAI,CAACM,IAAL,GAAYL,aAAa,CAACM,kBAAd,EAAZ;AACAV,UAAAA,OAAO,CAACW,IAAR,CAAaR,IAAb;AAGH,SARD;AASAf,QAAAA,WAAW,CAACY,OAAD,CAAX;AACC;AAhBU,KAAD,CAAd;AAkBD,GApBM,EAoBJ,EApBI,CAAT;AAuBApB,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMoB,OAAO,GAAGb,QAAQ,CAACyB,MAAT,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,GAAuBC,QAAvB,CAAgChC,cAAhC,CAA5B,CAAhB;AACAG,IAAAA,eAAe,CAACc,OAAD,CAAf;AACH,GAHQ,EAGN,CAACjB,cAAD,CAHM,CAAT;AAMA,SACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,eAA/B;AAA+C,IAAA,KAAK,EAAEA,cAAtD;AAAsE,IAAA,QAAQ,EAAEM,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,EAICN,cAAc,KAAKiC,SAAnB,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/B,YAAY,CAACgC,GAAb,CAAiBC,IAAI,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADC,CADL,CALJ,CADJ;AAaH,CAnDD;;AAqDA,eAAepC,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport { getAllRealTime } from '../../services/database';\n\n\n\nconst SearchBook = () => {\n\n    const [searchBookItem, setSearchBookiItem]= useState('')\n    const [searchResult, setSearchResult] = useState([])\n    const [bookList, setBookList] = useState([])\n\n    \n    const handleSearch = (event) =>{setSearchBookiItem(event.target.value)};\n\n    useEffect(() => {\n    \n        getAllRealTime({\n            collection: 'books',\n            filters: { field: 'title', condition: 'array-contains', value: searchBookItem },\n            order: 'timestamp',\n            callback: (collectionData) => {\n            const results = [];\n            collectionData.forEach((document) => {\n                const data = document.data();\n                const addedBookDate = new Date(data.timestamp);\n                data.date = addedBookDate.toLocaleDateString();\n                data.time = addedBookDate.toLocaleTimeString();\n                results.push(data);\n\n    \n            });\n            setBookList(results);\n            }\n        });\n      }, [])\n    \n\n    useEffect (() => {\n        const results = bookList.filter(bookItem => bookItem.toLowerCase().includes(searchBookItem));\n        setSearchResult(results);\n    }, [searchBookItem]);\n \n\n    return (\n        <>\n        <div>\n            <input type=\"text\" placeholder=\"search a book\" value={searchBookItem} onChange={handleSearch}/>\n        </div>\n        {searchBookItem !== undefined ?  <div></div> :\n            <ul>\n                {searchResult.map(item => (\n                <li>{item}</li>))}\n            </ul> \n    }\n        </>\n    )\n}\n \nexport default SearchBook;\n"]},"metadata":{},"sourceType":"module"}