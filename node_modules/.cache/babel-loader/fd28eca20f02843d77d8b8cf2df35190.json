{"ast":null,"code":"import _slicedToArray from \"/Users/rafelolmos/Documents/HookTheBook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rafelolmos/Documents/HookTheBook/src/components/Preview/Preview.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'; // import uploadFile from '../../services/storage';\n\nimport { addItem, getAllRealTime } from '../../services/database';\n\nconst _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bookList = _useState2[0],\n      setBookList = _useState2[1];\n\nconsole.log('bookList: ', bookList);\ngetAllRealTime({\n  collection: 'books',\n  filters: {\n    field: 'user',\n    condition: '==',\n    value: user.id\n  },\n  order: 'timestamp',\n  callback: collectionData => {\n    const results = [];\n    collectionData.forEach(document => {\n      const data = document.data();\n      const addedBookDate = new Date(data.timestamp);\n      data.date = addedBookDate.toLocaleDateString();\n      data.time = addedBookDate.toLocaleTimeString();\n      results.push(data);\n    });\n    setBookList(results);\n  }\n});\n\nconst Preview = ({\n  title = '',\n  authors = '',\n  pages = 0,\n  published = '',\n  description = '',\n  image = ''\n}) => {\n  const user = useSelector(state => state.user);\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        book = _useState4[0],\n        setBook = _useState4[1];\n\n  const handleAddBook = async () => {\n    if (!book) return;\n    const data = {\n      user: user.id,\n      title,\n      authors,\n      pages,\n      published,\n      description,\n      image,\n      timestamp: +new Date()\n    };\n    const result = await addItem('books', data);\n    console.log('data: ', data);\n    console.log('result: ', result);\n\n    if (result) {\n      setBook('');\n    }\n  };\n\n  console.log('user: ', user);\n  return React.createElement(\"div\", {\n    className: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXJsjaC65LLa3LRcK2t2Z08keV4viwBS1Jff3Ryo98Y9ywwAku\",\n    alt: \"\",\n    width: \"80px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Title: \", title), React.createElement(\"p\", {\n    className: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Author: \", authors), React.createElement(\"button\", {\n    className: \"addBook\",\n    onClick: handleAddBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"AddBook\"));\n};\n\nexport default Preview;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/HookTheBook/src/components/Preview/Preview.js"],"names":["React","useState","useEffect","useSelector","addItem","getAllRealTime","bookList","setBookList","console","log","collection","filters","field","condition","value","user","id","order","callback","collectionData","results","forEach","document","data","addedBookDate","Date","timestamp","date","toLocaleDateString","time","toLocaleTimeString","push","Preview","title","authors","pages","published","description","image","state","book","setBook","handleAddBook","result"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'\n\n// import uploadFile from '../../services/storage';\nimport { addItem, getAllRealTime } from '../../services/database';\n\n\nconst [bookList, setBookList] = useState([])\nconsole.log('bookList: ', bookList);\n\ngetAllRealTime({\n    collection: 'books',\n    filters: { field: 'user', condition: '==', value: user.id },\n    order: 'timestamp',\n    callback: (collectionData) => {\n      const results = [];\n      collectionData.forEach((document) => {\n        const data = document.data();\n        const addedBookDate = new Date(data.timestamp);\n        data.date = addedBookDate.toLocaleDateString();\n        data.time = addedBookDate.toLocaleTimeString();\n        results.push(data);\n      });\n      setBookList(results);\n    }\n  });\n\nconst Preview = ({title = '', authors = '', pages = 0, published = '', description = '', image = '' }) => {\n    const user = useSelector((state)=> state.user)\n    const [book, setBook] = useState([]);\n\n    const handleAddBook = async () => {\n        if (!book) return;\n\n        const data = {   \n            user: user.id, \n            title,\n            authors,\n            pages,\n            published,\n            description,\n            image,\n            timestamp: +(new Date()) \n        };\n\n        const result = await addItem('books', data);\n        console.log('data: ', data);\n        console.log('result: ', result);\n        if (result) {\n        setBook('')\n        }\n    };\n\n    console.log('user: ', user);\n\n    return ( \n        <div className='preview'>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXJsjaC65LLa3LRcK2t2Z08keV4viwBS1Jff3Ryo98Y9ywwAku\" alt=\"\" width=\"80px\" />\n            <p className=\"title\">Title: {title}</p>\n            <p className=\"author\">Author: {authors}</p>\n            <button className=\"addBook\" onClick={handleAddBook}>AddBook</button>\n        </div>\n\n     );\n}\n \nexport default Preview;"]},"metadata":{},"sourceType":"module"}