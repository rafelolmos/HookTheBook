{"ast":null,"code":"const INITIAL_STATE = 0;\n\nconst counterReducer = (state = INITIAL_STATE, action) => {\n  let counter = state;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      {\n        counter = counter + 1;\n        return counter;\n      }\n\n    case 'DECREMENT':\n      {\n        return counter > 0 ? counter - 1 : counter;\n      }\n\n    default:\n      {\n        return counter;\n      }\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/Rafel-CRA-Boilerplate/rafel-cra-boilerplate/src/redux/reducers/countReducer.js"],"names":["INITIAL_STATE","counterReducer","state","action","counter","type"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAAtB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,aAAT,EAAwBG,MAAxB,KAAmC;AACtD,MAAIC,OAAO,GAAGF,KAAd;;AAEA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAK,WAAL;AAAkB;AACdD,QAAAA,OAAO,GAAGA,OAAO,GAAE,CAAnB;AACA,eAAOA,OAAP;AACH;;AACD,SAAK,WAAL;AAAiB;AACb,eAAOA,OAAO,GAAG,CAAV,GAAcA,OAAO,GAAE,CAAvB,GAA2BA,OAAlC;AACH;;AACD;AAAS;AACL,eAAOA,OAAP;AACH;AAVL;AAYH,CAfD;;AAiBA,eAAeH,cAAf","sourcesContent":["const INITIAL_STATE = 0\n\nconst counterReducer = (state = INITIAL_STATE, action) => {\n    let counter = state;\n\n    switch(action.type){\n        case 'INCREMENT': {\n            counter = counter +1\n            return counter\n        }\n        case 'DECREMENT':{\n            return counter > 0 ? counter -1 : counter\n        }\n        default :{\n            return counter\n        }\n    }\n}\n\nexport default counterReducer"]},"metadata":{},"sourceType":"module"}