{"ast":null,"code":"import _slicedToArray from \"/Users/rafelolmos/Documents/HookTheBook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rafelolmos/Documents/HookTheBook/src/components/Preview/Preview.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport uploadFile from '../../services/storage';\nimport { getItem, getAllRealTime, deleteItem, addItem } from '../../services/database';\n\nconst _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bookList = _useState2[0],\n      setBookList = _useState2[1];\n\nconst _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      book = _useState4[0],\n      setBook = _useState4[1];\n\ngetAllRealTime({\n  collection: 'books',\n  filters: {\n    field: 'user',\n    condition: '==',\n    value: user\n  },\n  order: 'timestamp',\n  callback: collectionData => {\n    const results = [];\n    collectionData.forEach(document => {\n      const data = document.data();\n      const addedBookDate = new Date(data.timestamp);\n      data.date = addedBookDate.toLocaleDateString();\n      data.time = addedBookDate.toLocaleTimeString();\n      results.push(data);\n    });\n    setBookList(results);\n  }\n}); // const [book, setBook] = useState('');\n\nconst handleAddBook = async () => {\n  if (!book) return;\n  const result = await addItem('books', {\n    user,\n    title,\n    author,\n    timestamp: +new Date()\n  });\n\n  if (result) {\n    setBook('');\n  }\n};\n\nconst Preview = ({\n  title = '',\n  authors = '',\n  pages = 0,\n  published = '',\n  description = '',\n  image = '',\n  user\n}) => {\n  user = useSelector(state => state.user);\n  console.log('user: ', user);\n  return React.createElement(\"div\", {\n    className: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXJsjaC65LLa3LRcK2t2Z08keV4viwBS1Jff3Ryo98Y9ywwAku\",\n    alt: \"\",\n    width: \"80px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Title: \", title), React.createElement(\"p\", {\n    className: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Author: \", authors), React.createElement(\"button\", {\n    className: \"addBook\",\n    onClick: handleAddBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"AddBook\"));\n};\n\nexport default Preview;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/HookTheBook/src/components/Preview/Preview.js"],"names":["React","useState","useEffect","useSelector","uploadFile","getItem","getAllRealTime","deleteItem","addItem","bookList","setBookList","book","setBook","collection","filters","field","condition","value","user","order","callback","collectionData","results","forEach","document","data","addedBookDate","Date","timestamp","date","toLocaleDateString","time","toLocaleTimeString","push","handleAddBook","result","title","author","Preview","authors","pages","published","description","image","state","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,UAAlC,EAA8CC,OAA9C,QAA6D,yBAA7D;;kBAEgCP,QAAQ,CAAC,EAAD,C;;MAAjCQ,Q;MAAUC,W;;mBACOT,QAAQ,CAAC,EAAD,C;;MAAzBU,I;MAAMC,O;;AAEbN,cAAc,CAAC;AACXO,EAAAA,UAAU,EAAE,OADD;AAEXC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE,IAA5B;AAAkCC,IAAAA,KAAK,EAAEC;AAAzC,GAFE;AAGXC,EAAAA,KAAK,EAAE,WAHI;AAIXC,EAAAA,QAAQ,EAAGC,cAAD,IAAoB;AAC5B,UAAMC,OAAO,GAAG,EAAhB;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAwBC,QAAD,IAAc;AACnC,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACA,YAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,SAAd,CAAtB;AACAH,MAAAA,IAAI,CAACI,IAAL,GAAYH,aAAa,CAACI,kBAAd,EAAZ;AACAL,MAAAA,IAAI,CAACM,IAAL,GAAYL,aAAa,CAACM,kBAAd,EAAZ;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAaR,IAAb;AACD,KAND;AAOAf,IAAAA,WAAW,CAACY,OAAD,CAAX;AACD;AAdU,CAAD,CAAd,C,CAkBA;;AAGA,MAAMY,aAAa,GAAG,YAAY;AAC9B,MAAI,CAACvB,IAAL,EAAW;AAEX,QAAMwB,MAAM,GAAG,MAAM3B,OAAO,CAC1B,OAD0B,EAE1B;AAAEU,IAAAA,IAAF;AACEkB,IAAAA,KADF;AAEEC,IAAAA,MAFF;AAGET,IAAAA,SAAS,EAAE,CAAE,IAAID,IAAJ;AAHf,GAF0B,CAA5B;;AAOA,MAAIQ,MAAJ,EAAY;AACVvB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,CAbH;;AAiBA,MAAM0B,OAAO,GAAG,CAAC;AAACF,EAAAA,KAAK,GAAG,EAAT;AAAaG,EAAAA,OAAO,GAAG,EAAvB;AAA2BC,EAAAA,KAAK,GAAG,CAAnC;AAAsCC,EAAAA,SAAS,GAAG,EAAlD;AAAsDC,EAAAA,WAAW,GAAG,EAApE;AAAwEC,EAAAA,KAAK,GAAG,EAAhF;AAAoFzB,EAAAA;AAApF,CAAD,KAAgG;AAE5GA,EAAAA,IAAI,GAAGf,WAAW,CAAEyC,KAAD,IAASA,KAAK,CAAC1B,IAAhB,CAAlB;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB5B,IAAtB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,4GAAT;AAAsH,IAAA,GAAG,EAAC,EAA1H;AAA6H,IAAA,KAAK,EAAC,MAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BkB,KAA7B,CAFJ,EAGI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+BG,OAA/B,CAHJ,EAII;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEL,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ;AASH,CAdD;;AAgBA,eAAeI,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'\n\nimport uploadFile from '../../services/storage';\nimport { getItem, getAllRealTime, deleteItem, addItem } from '../../services/database';\n\nconst [bookList, setBookList] = useState([]);\nconst [book, setBook] = useState([]);\n\ngetAllRealTime({\n    collection: 'books',\n    filters: { field: 'user', condition: '==', value: user },\n    order: 'timestamp',\n    callback: (collectionData) => {\n      const results = [];\n      collectionData.forEach((document) => {\n        const data = document.data();\n        const addedBookDate = new Date(data.timestamp);\n        data.date = addedBookDate.toLocaleDateString();\n        data.time = addedBookDate.toLocaleTimeString();\n        results.push(data);\n      });\n      setBookList(results);\n    }\n  });\n\n\n// const [book, setBook] = useState('');\n\n\nconst handleAddBook = async () => {\n    if (!book) return;\n\n    const result = await addItem(\n      'books', \n      { user, \n        title,\n        author,\n        timestamp: +(new Date()) }\n    );\n    if (result) {\n      setBook('')\n    }\n  };\n\n\n\nconst Preview = ({title = '', authors = '', pages = 0, published = '', description = '', image = '', user }) => {\n    \n    user = useSelector((state)=>state.user)\n    console.log('user: ', user);\n\n    return ( \n        <div className='preview'>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXJsjaC65LLa3LRcK2t2Z08keV4viwBS1Jff3Ryo98Y9ywwAku\" alt=\"\" width=\"80px\" />\n            <p className=\"title\">Title: {title}</p>\n            <p className=\"author\">Author: {authors}</p>\n            <button className=\"addBook\" onClick={handleAddBook}>AddBook</button>\n        </div>\n\n     );\n}\n \nexport default Preview;"]},"metadata":{},"sourceType":"module"}