{"ast":null,"code":"import _slicedToArray from \"/Users/rafelolmos/Documents/Rafel-CRA-Boilerplate/rafel-cra-boilerplate/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rafelolmos/Documents/Rafel-CRA-Boilerplate/rafel-cra-boilerplate/src/redux/reducers/countReducer.js\";\nimport React, { useReducer } from 'react';\nconst INITIAL_STATE = 0;\n\nconst counterReducer = (state = INITIAL_STATE, action) => {\n  let counter = state;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      {\n        counter = counter + 1;\n        return counter;\n      }\n\n    case 'DECREMENT':\n      {\n        counter = counter > 0 ? counter - 1 : counter;\n        return counter;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst UseReducerCounter = () => {\n  const _useReducer = useReducer(counterReducer, INITIAL_STATE),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Counter:\", counter), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'INCREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'DECREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"-\")));\n};\n\nexport default UseReducerCounter;","map":{"version":3,"sources":["/Users/rafelolmos/Documents/Rafel-CRA-Boilerplate/rafel-cra-boilerplate/src/redux/reducers/countReducer.js"],"names":["React","useReducer","INITIAL_STATE","counterReducer","state","action","counter","type","UseReducerCounter","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,aAAa,GAAG,CAAtB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,aAAT,EAAwBG,MAAxB,KAAmC;AACtD,MAAIC,OAAO,GAAGF,KAAd;;AAEA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAK,WAAL;AAAkB;AACdD,QAAAA,OAAO,GAAGA,OAAO,GAAE,CAAnB;AACA,eAAOA,OAAP;AACH;;AACD,SAAK,WAAL;AAAiB;AACbA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAAV,GAAcA,OAAO,GAAE,CAAvB,GAA2BA,OAArC;AACA,eAAOA,OAAP;AACH;;AACD;AAAS;AACL,eAAOF,KAAP;AACH;AAXL;AAaH,CAhBD;;AAkBA,MAAMI,iBAAiB,GAAG,MAAM;AAAA,sBACFP,UAAU,CAACE,cAAD,EAAiBD,aAAjB,CADR;AAAA;AAAA,QACrBE,KADqB;AAAA,QACdK,QADc;;AAG5B,SACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcH,OAAd,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAIG,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAIE,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADA,CADJ;AASD,CAZH;;AAcA,eAAeC,iBAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nconst INITIAL_STATE = 0\n\nconst counterReducer = (state = INITIAL_STATE, action) => {\n    let counter = state;\n\n    switch(action.type){\n        case 'INCREMENT': {\n            counter = counter +1\n            return counter\n        }\n        case 'DECREMENT':{\n            counter = counter > 0 ? counter -1 : counter\n            return counter\n        }\n        default :{\n            return state\n        }\n    }\n}\n\nconst UseReducerCounter = () => {\n    const [state, dispatch] = useReducer(counterReducer, INITIAL_STATE);\n  \n    return (\n        <>\n        <div>\n            <div>Counter:{counter}</div>\n            <button onClick={()=>dispatch({type: 'INCREMENT'})}>+</button>\n            <button onClick={()=>dispatch({type: 'DECREMENT'})}>-</button>\n        </div>\n        </>\n    );\n  }\n\nexport default UseReducerCounter"]},"metadata":{},"sourceType":"module"}